from Enumeration.LDAPSession import *
from Enumeration.PsSession import *
import argparse

password_policy = 'Password Policy'
kerberos_audit = 'Kerberos Audit'
login_logon_logoff_audit = 'Login/Logon/Logoff Audit'
file_share_audit = 'File share audit'
default_domain_policy = 'Default Domain Policy'
default_domain_controllers_policy = 'Default Domain Controllers Policy'

test_xml = """<?xml version="1.0"?>
<data>
    <country name="Liechtenstein">
        <rank>1</rank>
        <year>2008</year>
        <gdppc>141100</gdppc>
        <neighbor name="Austria" direction="E"/>
        <neighbor name="Switzerland" direction="W"/>
    </country>
    <country name="Singapore">
        <rank>4</rank>
        <year>2011</year>
        <gdppc>59900</gdppc>
        <neighbor name="Malaysia" direction="N"/>
    </country>
    <country name="Panama">
        <rank>68</rank>
        <year>2011</year>
        <gdppc>13600</gdppc>
        <neighbor name="Costa Rica" direction="W"/>
        <neighbor name="Colombia" direction="E"/>
    </country>
</data>"""

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='LDAP Session')
    parser.add_argument('-i', '--ip', help='IP address of the domain controller')
    parser.add_argument('-u', '--username', help='Username to authenticate with')
    parser.add_argument('-p', '--password', help='Password to authenticate with')
    parser.add_argument('-d', '--domain', help='Domain to authenticate with')
    args = parser.parse_args()
    
    # if not args.ip:
    #     print('[!] Error: No IP address provided')
    #     sys.exit(1)
    # if not args.username:
    #     print('[!] Error: No username provided')
    #     sys.exit(1)
    # if not args.password:
    #     print('[!] Error: No pa+```ssword provided')
    #     sys.exit(1)
    # if not args.domain:
    #     print('[!] Error: No domain provided')
    #     sys.exit(1)
        
    ldap_session = LDAPSession('192.168.0.104', 'giangtran@capstone.local', 'qwerty123')
    domain_ip = ldap_session.ip
    ps_session = PsSession(domain_ip, 'Administrator', 'Pa$$w0rd')
    
    
    # ldap_session.do_bind()
    # print(ldap_session.whoami())
    # ldap_session.unbind()
    print('[+] Getting default naming context')
    print(f'[+] Found: {ldap_session.get_naming_context()}')

    # print(Fore.GREEN + '[+] Getting all users' + Style.RESET_ALL)
    # ldap_session.getAllUsers()
    # print(Fore.GREEN + '[+] Getting all Admin Users' + Style.RESET_ALL)
    # ldap_session.getAdminUsers()
    # print(Fore.GREEN + '[+] Getting AS-REP users' + Style.RESET_ALL)
    # print(ldap_session.get_as_rep_user())
    # print(Fore.GREEN + '[+] Getting all groups' + Style.RESET_ALL)
    # ldap_session.getAllGroups()

    # ldap_session.getAllComputers()
    # # print(computers)
    
    # print(Fore.GREEN + '[+] Getting all GPOs' + Style.RESET_ALL)
    # ldap_session.getGPOs()
    result_ps = ps_session.runPsCommand("Get-GPOReport -Name '" + login_logon_logoff_audit + "' -ReportType Xml")
    # ps_session.parseXML(result_ps)
    # print(Fore.GREEN + '[+] Getting all DCs' + Style.RESET_ALL)
    # ldap_session.getAllDCs()
    # print(Fore.GREEN + '[+] Getting all OUs' + Style.RESET_ALL)
    # ldap_session.getAllOUs()
    # print(Fore.GREEN + '[+] Getting all members of group' + Style.RESET_ALL)
    # ldap_session.getGroupMember('Administrators')
    # print(Fore.GREEN + '[+] Getting all members of all groups' + Style.RESET_ALL)
    # ldap_session.getAllGroupAndMember()
    # print(ldap_session.do_ldap_query('', filter, ['*'])) 
    # print(ldap_session.is_binded)
    
    # ldap_session.do_bind()
    # print(ldap_session.whoami())
    # print(ldap_session.is_binded)
    # ldap_session.unbind()
    # print(ldap_session.whoami())
    # print(ldap_session.is_binded)
    # print(ldap_session.do_ldap_query('DC=example,DC=com', '(objectclass=*)', ['cn', 'sAMAccountName', 'distinguishedName'])) 
    # print(ldap_session.is_binded)