{
    "AS-REP Roasting": ["Kerberos Pre-authentication Validation does not enabled",
                        "(&(UserAccountControl:1.2.840.113556.1.4.803:=4194304)(!(UserAccountControl:1.2.840.113556.1.4.803:=2))(!(objectCategory=computer)))",
                        "https://book.hacktricks.xyz/windows-hardening/active-directory-methodology/asreproast",
                        "Medium",
                        "Active Directory uses the Kerberos protocol for authentication. As it is an old protocol, numerous security hardening measures have been taken since its creation, and some legacy options must be disabled to ensure proper security posture.\n\nAn attacker can use the AS-REP Roasting attack to guess the users' passwords. The first part of the AS-REP Roasting attack is to identify users for whom the Kerberos pre-authentication is not set (DONT_REQ_PREAUTH). This is part of the userAccountControl attribute.\n\nWithout Kerberos pre-authentication, an attacker can send an authentication request (AS-REQ) to the KDC on behalf of the user. The KDC will then reply with an encrypted TGT (AS-REP). A part of the AS-REP is encrypted with the original user's key, derived from their own password. The attacker can then use offline bruteforcing to guess the password. This attack is much faster than online bruteforcing (e.g. by making numerous authentication requests with different passwords).\n\nPre-authentication forces the attacker to be in possession of the password (by having to encrypt a timestamp) before the KDC sends back the encrypted TGT.",
                        "In a successful attack, the attacker can gain access to a user's credentials, attackers can potentially escalate privileges, access sensitive data, and move laterally within a network.",
                        "Accounts should be configured to use Kerberos pre-authentication."
                        ],
    "Kerberoasting": ["Kerberoasting Attack",
                        "(&(objectCategory=person)(!(userAccountControl:1.2.840.113556.1.4.803:=2))(servicePrincipalName=*))",
                          "https://book.hacktricks.xyz/windows-hardening/active-directory-methodology/kerberoast",
                          "High",
                          "With Kerberoast, attackers exploit the internals of the Kerberos authentication protocol and generally target privileged domain user accounts. The goal of this attack is to discover the cleartext password of a privileged account, and thereby gain the associated rights. This attack can be performed from inside an Active Directory environment. All an attacker needs is a simple, unprivileged user account.\n\nWhen the Service Principal Name attribute is set on an account, the underlying security of this account is further affected. Usually, password security policies are configured to lock an account after a few password failures in a row.\nHowever, when this attribute is set, exhaustive password guessing is feasible.\n\nPrivileged accounts such as those in the Domain Admins group are usually targeted in Kerberoasting. Getting access to these accounts can lead to a full domain compromise.",
                          "In a successful attack, the attacker can gain access to the accounts associated with the service tickets, allowing them to gain unauthorized access to sensitive information or to carry out other malicious activities.",
                          "- Remove the Service Principal Name from the user account\n- If a Service Principal Name associated with a user account is required for functional reasons, use an unprivileged account instead\n- Increase the complexity of the password:\n- Use Group Managed Service Accounts (gMSA) instead of user accounts\n- Use Smart Cards for sensitive accounts"
                          ],
    "Unconstrained delegation": ["Dangerous Kerberos delegation set on a computer object",
                                "(&(objectCategory=computer)(userAccountControl:1.2.840.113556.1.4.803:=524288))",
                                "https://book.hacktricks.xyz/windows-hardening/active-directory-methodology/unconstrained-delegation",
                                "High",
                                "Kerberos, the protocol at the core of Active Directory security, allows certain servers to obtain a user's credentials and use those to authenticate on behalf of the user.\n\nWhen a user authenticates on a server that is Trusted for delegation, a copy of the user's credentials is sent to the server by the domain controller. These credentials can then be used to authenticate on behalf of the user.",
                                "If an attacker is able to compromise such a server, they will be able to steal and reuse the credentials of all the users authenticating on this particular server. If an administrator connects to the compromised machine, the attacker will be able to escalate their privileges and become an administrator as well. As a consequence, the Trusted for delegation property should only be allowed on trusted servers such as domain controllers. This mechanism is called unconstrained delegation.",
                                "The only accounts using unconstrained delegation should be the domain controller accounts. Administrators should also be protected against any dangerous delegation type:\n- By being members of the 'Protected Users' group, or\n- By setting the 'Account is sensitive and cannot be delegated' flag on the user accounts"
                                ],
    "Reversible Encryption":  ["User accounts with reversible encryption enabled",
                                "(&(objectClass=user)(objectCategory=user)(userAccountControl:1.2.840.113556.1.4.803:=128))",
                                "https://viperone.gitbook.io/pentest-everything/everything/everything-active-directory/credential-access/modify-authentication-process/reversible-encryption",
                                "High",
                                "In an Active Directory environment, reversible encryption refers to the ability to store certain sensitive attributes, such as user passwords, in a format that can be reversed back to its original plaintext form. This feature is primarily used for backward compatibility with legacy systems that may require access to the plaintext passwords.\n\nEnabling reversible encryption in Active Directory is generally not recommended from a security standpoint. It weakens the protection of user passwords and exposes them to potential compromise.\n\nThe first part of this attack is to identify user accounts that have the 'Store password using reversible encryption' option enabled. This can be done by querying the userAccountControl attribute in Active Directory.\n\nOnce the accounts with reversible encryption enabled are identified, an attacker can potentially retrieve the plaintext passwords from the Active Directory database or related components.",
                                "If an attacker gains unauthorized access to the Active Directory database or related components (DCSync Attack is possible), they can retrieve the plaintext passwords and potentially misuse them.",
                                "Disable the 'Store password using reversible encryption' option for user accounts in Active Directory. This can be done through Group Policy settings or directly on the user account properties."
                                   ],
    "Interesting Right": ["Active Directory Object with dangerous rights assigned",
                        "",
                        "https://book.hacktricks.xyz/windows-hardening/active-directory-methodology/acl-persistence-abuse",
                        "High",
                        "In an Active Directory environment, permissions and rights are assigned to various objects, such as users, groups, and computers, to control access to resources and perform specific actions. These permissions are defined in the form of Access Control Lists (ACLs) that specify who can access a resource and what actions they can perform.\n\nAn attacker can abuse interesting rights to escalate privileges and gain unauthorized access to sensitive resources. By identifying objects with interesting rights, such as the 'GenericAll' or 'GenericWrite' rights, an attacker can potentially modify permissions, access confidential data, or execute malicious actions on the target system.\n\n. Some of the interesting rights that attackers may target include:\n- GenericAll: Allows full control over the object, including read, write, and delete permissions.\n- GenericWrite: Allows write access to the object, enabling the attacker to modify its properties or content.\n- WriteDacl: Allows the modification of the object's DACL (Discretionary Access Control List), granting or revoking permissions.\n- WriteOwner: Allows the modification of the object's owner, potentially taking ownership of the object.\n- AllExtendedRight: Ability to add user to a group or reset password.\n- ForceChangePassword: Ability to change user's password.\n- AddSelf: Ability to add yourself to a group",
                        "If an attacker gains access to objects with interesting rights, they can escalate privileges, access sensitive data, modify permissions, or perform other malicious actions on the target system.",
                        "To mitigate the risk of interesting rights abuse, organizations should regularly review and audit permissions assigned to objects in Active Directory. Limit the permissions granted to users, groups, and computers to only what is necessary to perform their intended tasks. Monitor and log changes to permissions and access rights to detect suspicious activities."
                    ],
    "DC Sync Attack": [ "DCSync Attack",
                        "",
                        "https://book.hacktricks.xyz/windows-hardening/active-directory-methodology/dcsync",
                        "High",
                        "DCSync is a legitimate Active Directory feature that domain controllers only use for replicating changes, but illegitimate security principals can also use it.\n\nThe Source security principal can request sensitive secrets (password hashes, Kerberos keys, etc.) from the Target domain using the DCSync feature, ultimately leading to a total compromise of the domain.\n\nTo fetch secrets, two security permissions are required: \"Replicating Directory Changes\" (DS-Replication-Get-Changes) and \"Replicating Directory Changes All\" (DS-Replication-Get-Changes-All). The relation occurs only if you give both of these permissions to the Source, either directly or through nested group membership.",
                        "An attacker can use the DCSync attack to retrieve sensitive information from the domain controller, such as password hashes, Kerberos keys, and other secrets. This information can be used to escalate privileges, move laterally within the network, and carry out other malicious activities.",
                        "To mitigate the risk of DCSync attacks, limit the permissions granted to security principals in the domain. Only grant the necessary permissions to perform specific tasks, and avoid granting excessive privileges that could be abused by attackers."
                        ],
    "Inactive User": ["Inactive User Account exsit in the domain",
                        "",
                        "",
                        "Low",
                        "Inactive user accounts are user accounts that have not been used for a specified period of time. These accounts may pose a security risk if they are not properly managed and monitored.\n\nInactive user accounts can be targeted by attackers to gain unauthorized access to the network. If an attacker compromises an inactive user account, they may be able to use it to access sensitive information, escalate privileges, or carry out other malicious activities.\n\nTo identify inactive user accounts, organizations can query the lastLogonTimestamp attribute in Active Directory. This attribute stores the timestamp of the last logon for each user account, allowing administrators to determine which accounts have not been used recently.",
                        "If an attacker gains access to an inactive user account, they may be able to use it to access sensitive information, escalate privileges, or carry out other malicious activities.",
                        "To mitigate the risk of inactive user accounts, organizations should regularly review and monitor user accounts to identify and disable or remove inactive accounts. Implementing policies and procedures for managing inactive accounts can help reduce the security risks associated with these accounts."
                        ],
    "User Not Change Password": ["User Account with Password Do Not Change for a long time",
                                "",
                                "",
                                "Low",
                                "In an Active Directory environment, user accounts are typically required to change their passwords at regular intervals to enhance security and reduce the risk of unauthorized access. This practice helps protect user accounts from password-related attacks, such as brute force attacks or password guessing.\n\nIf a user account has not changed its password for an extended period of time, it may indicate a security risk. Attackers could potentially exploit this situation to gain unauthorized access to the user account and associated resources.\n\nTo identify user accounts that have not changed their passwords for a long time, organizations can query the pwdLastSet attribute in Active Directory. This attribute stores the timestamp of the last password change for each user account, allowing administrators to determine which accounts have not changed their passwords recently.",
                                "The attacker can perform password guessing attacks, brute force attacks, or other password-related attacks to gain unauthorized access to the user account and associated resources.",
                                "To mitigate the risk of user accounts not changing passwords, organizations should enforce password expiration policies that require users to change their passwords at regular intervals. Implementing strong password policies, multi-factor authentication, and monitoring user account activities can help enhance security and reduce the risk of unauthorized access."
                                ],
    "Unnecessary Group": ["Inactive Group exsit in the domain",
                          "",
                          "",
                          "Low",
                          "In an Active Directory environment, groups are used to organize users, computers, and other objects to simplify management and control access to resources. However, over time, some groups may become inactive and have no member in those groups, leading to potential security risks.\n\nInactive groups may contain unnecessary or outdated permissions that could be exploited by attackers to gain unauthorized access to resources. If an attacker compromises an inactive group, they may be able to escalate privileges, access sensitive information, or carry out other malicious activities.",
                          "If an attacker gains access to an inactive group, they may be able to exploit the group's permissions to escalate privileges, access sensitive information, or carry out other malicious activities.",
                          "To mitigate the risk of inactive groups, organizations should regularly review and monitor group memberships to identify and remove inactive groups. Implementing policies and procedures for managing group memberships can help reduce the security risks associated with inactive groups."
                          ],
    "Bidirectional Trust": ["Bidirectional Trust between two domains",
                            "(&(objectClass=trustedDomain)(trustDirection=3))",
                            "https://book.hacktricks.xyz/windows-hardening/active-directory-methodology/external-forest-domain-oneway-inbound",
                            "Info",
                            "In an Active Directory environment, trust relationships are established between domains to allow users in one domain to access resources in another domain. Trust relationships can be unidirectional or bidirectional, depending on the direction of trust and the permissions granted.\n\nA bidirectional trust relationship allows users in both domains to access resources in each other's domains. While bidirectional trusts can simplify resource access and management, they can also introduce security risks if not properly configured and monitored.\n\nIf an attacker compromises one domain in a bidirectional trust relationship, they may be able to leverage the trust to gain unauthorized access to resources in the other domain. This could lead to privilege escalation, data exfiltration, or other malicious activities.",
                            "If an attacker compromises one domain in a bidirectional trust relationship, they may be able to leverage the trust to gain unauthorized access to resources in the other domain. This could lead to privilege escalation, data exfiltration, or other malicious activities.",
                            "To mitigate the security risks associated with bidirectional trust relationships, organizations should carefully configure and monitor trust relationships between domains. Limiting the permissions granted by trusts, monitoring trust activities, and regularly reviewing trust configurations can help reduce the risk of unauthorized access and data breaches. Both SID filter quarantining (set the option on the trust) and protections against the 'printer bug' should be applied."
                            ] 
}