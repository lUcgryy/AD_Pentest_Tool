import ldap3
import argparse
import socket
import sys

UF_ACCOUNTDISABLE = 0x00000002
UF_DONT_REQUIRE_PREAUTH = 0x00400000

class LDAPSession(object):
    def __init__(self, ip='', username='', password='', domain=''):
        if ip:
            self.ip = ip
        else:
            self.get_ip_from_hostname(domain)
        self.username = username
        self.password = password
        self.domain = domain
        
        self.conn = self.connection_init()
        self.domain_base = ''
        self.is_binded = False
        
    def get_ip_from_hostname(self, hostname):
        try:
            dc_ip = socket.gethostbyname(hostname)
        except:
            print('[!] Error: Unable to resolve hostname to IP address')
            
        self.ip = dc_ip
        
    def connection_init(self):
        if not self.ip:
            self.get_ip_from_hostname(self.domain)
        conn = ldap3.Connection(ldap3.Server("ldap://{}".format(self.ip), get_info=ldap3.ALL), user=self.username, password=self.password, auto_bind=True)
        return conn
    
    def unbind(self):
        self.conn.unbind()
        self.is_binded = False
        
    def do_bind(self):
        try:
            self.conn.bind()
            print('[+] Successfully binded to {}'.format(self.ip))
            self.is_binded = True
        except ldap3.core.exceptions.LDAPBindError as e:
            print('[!] Error: {}'.format(e))
            self.is_binded = False
        ##InvalidCredentialsResult: 80090308: LdapErr: DSID-0C09042F, comment: AcceptSecurityContext error, data 52e, v2580
    
    def whoami(self):
        try:
            current_dn = self.conn.extend.standard.who_am_i()
        except ldap3.core.exceptions.LDAPSessionTerminatedByServerError as e:
            print('[!] Error: {}'.format(e))
        
        return current_dn
    
    def do_ldap_query(self, search_base, search_filter, attributes):
        self.conn.search(search_base, search_filter, attributes=attributes)
        # print(self.conn)
        return self.conn.entries
        
if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='LDAP Session')
    parser.add_argument('-i', '--ip', help='IP address of the domain controller')
    parser.add_argument('-u', '--username', help='Username to authenticate with')
    parser.add_argument('-p', '--password', help='Password to authenticate with')
    parser.add_argument('-d', '--domain', help='Domain to authenticate with')
    args = parser.parse_args()
    
    # if not args.ip:
    #     print('[!] Error: No IP address provided')
    #     sys.exit(1)
    # if not args.username:
    #     print('[!] Error: No username provided')
    #     sys.exit(1)
    # if not args.password:
    #     print('[!] Error: No password provided')
    #     sys.exit(1)
    # if not args.domain:
    #     print('[!] Error: No domain provided')
    #     sys.exit(1)
        
    ldap_session = LDAPSession('192.168.0.104', 'giangtran@capstone.local', 'qwerty123')
    # ldap_session.do_bind()
    # print(ldap_session.whoami())
    # ldap_session.unbind()
    print(ldap_session.whoami())
    # print(ldap_session.is_binded)
    filter = "(&(UserAccountControl:1.2.840.113556.1.4.803:=%d)" \
                       "(!(UserAccountControl:1.2.840.113556.1.4.803:=%d))(!(objectCategory=computer)))" % \
                           (UF_DONT_REQUIRE_PREAUTH, UF_ACCOUNTDISABLE)
    print(filter)
    print(ldap_session.do_ldap_query('dc=capstone,dc=local', filter, ['cn', 'sAMAccountName', 'distinguishedName'])) 
    # print(ldap_session.is_binded)
    
    # ldap_session.do_bind()
    # print(ldap_session.whoami())
    # print(ldap_session.is_binded)
    # ldap_session.unbind()
    # print(ldap_session.whoami())
    # print(ldap_session.is_binded)
    # print(ldap_session.do_ldap_query('DC=example,DC=com', '(objectclass=*)', ['cn', 'sAMAccountName', 'distinguishedName'])) 
    # print(ldap_session.is_binded)